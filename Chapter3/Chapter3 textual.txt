3.3 string类的输入运算符：忽略开头的空白（空格、制表符、换行等等），从第一个真正的字符开始直到下一个空白。
    getline()函数：读入流，直到遇到换行符位置。

3.9 不合法，因为未初始化变量s

3.11 合法，类型为const char&

3.12 a) 合法，生成的ivec是元素为vector<int>的vector
     b) 不合法，vector间直接赋值需要类型一致
     c) 正确，生成10个内容为"null"的string

3.13 a) 空vector
     b) 10个 int 0
     c) 10个 int 42
     d) 1个 int 10
     e) 2个 int 10 42
     f) 10个 string 空
     g) 10个 string "hi"

3.18 不合法，第二行改成 ivec.push_back(42);

3.19 1) vector<int> v1{42,42,42,42,42,42,42,42,42,42};
     2) vector<int> v2(10,42);
     3) vector<int> v3;
        for(int i = 0;i < 10;i++){
            v3.push_back(42);
        }

3.26 因为iterator没有加法运算，end是iterator

3.27 a) 不合法，因为buff_size不是常数
     b) 合法
     c) 不合法，函数返回值不是常数
     d) 合法

3.28 string不是内置数据类型，所以sa，sa2为空
     int是内置数据类型，ia在main函数外所以ia是含有10个0的int数组，ia2在main函数内，值不确定

3.29 数组的大小确定不能修改，不灵活

3.30 数组size为10，索引在0-9之间，for循环最后一次索引为10，超出边界

3.33 因为声明在main函数内，所以值不确定

3.34 p2-p1得到的是两指针的间距，因为他们指向的是同一数组可以求间距，所以可以一直成立

3.37 hello每个字符占一行

3.38 指针相加是地址相加，没有什么意义